{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/react/pokemon/src/components/MadLibs.jsx\";\n// import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport WordForm from \"./WordForm.js\";\nimport Story from \"./Story.js\";\nimport MadLibsGen from \"./MadLibsGen.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MadLibs extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      madlibsgen: MadLibsGen,\n      selectedMadLibGen: MadLibsGen[0]\n      // selectedMadLibGen: MadLibsGen[0],\n    };\n    // state = {\n    //   selectedMadLibGen: null\n    // }\n    // Override current state (setState, newState?) spread operator line 17 = lines 9 - 10\n    this.onWordInputChange = (key, value, index) => {\n      // console.log(key);\n      // console.log(value);\n      // console.log(index);\n\n      // const newState is a copy of the oldState and spreading it across, newState has selected Madlibs (which story)\n      const newState = {\n        ...this.state\n      };\n      newState.selectedMadLibGen.words[index] = {\n        ...newState.selectedMadLibGen.words[index],\n        value: value\n      };\n      this.setState(newState);\n    };\n  }\n  // function that displays the story only if all values are present/inputted\n  isStoryComplete() {\n    for (let i = 0; i < this.state.selectedMadLibGen.words.length; i++) {\n      if (!this.state.selectedMadLibGen.words[i].value) {\n        return false;\n      }\n      return true;\n    }\n  }\n\n  // Create select dropdown to allow user to switch selected MadLib to play\n  // map through the array in this.state.madlibsgen - gather titles, display as dropdown <options>\n  // using onChange event, set the selectedMadLibGen object\n\n  createMadlibDropdown() {\n    let output = [];\n    for (let i = 0; i < this.state.madlibsgen.length; i++) {\n      output.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: this.state.madlibsgen[i].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this));\n    }\n    return output;\n  }\n  changeMadlibSelection(event) {\n    console.log(event.target.value);\n    this.setState({\n      selectedMadLibgen: MadLibsGen[event.target.value]\n    });\n  }\n\n  // upon selection of Madlib (onChange), this.changeMadlibSelection is called\n  render() {\n    console.log(this.state.selectedMadLib);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MadLibs\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mad Libs page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a Madlib\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: () => this.changeMadlibSelection(e),\n        children: this.createMadlibDropdown()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !this.state.selectedMadLibGen ? this.createMadlibDropdown() : null, /*#__PURE__*/_jsxDEV(WordForm, {\n        words: this.state.selectedMadLibGen.words,\n        onInputChange: this.onWordInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), this.isStoryComplete() && /*#__PURE__*/_jsxDEV(Story, {\n        text: this.state.selectedMadLibGen.getText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const MadLibs = () => {\n//   return (\n//     <main className=\"App-home\">\n//       <div>Mad Libs page</div>\n\n//       <WordForm />\n//     </main>\n//   );\n// };\n\nexport default MadLibs;","map":{"version":3,"names":["React","Component","WordForm","Story","MadLibsGen","jsxDEV","_jsxDEV","MadLibs","constructor","arguments","state","madlibsgen","selectedMadLibGen","onWordInputChange","key","value","index","newState","words","setState","isStoryComplete","i","length","createMadlibDropdown","output","push","children","title","fileName","_jsxFileName","lineNumber","columnNumber","changeMadlibSelection","event","console","log","target","selectedMadLibgen","render","selectedMadLib","className","onChange","e","onInputChange","text","getText"],"sources":["/Users/conniewong/bootcamp/react/pokemon/src/components/MadLibs.jsx"],"sourcesContent":["// import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport WordForm from \"./WordForm.js\";\nimport Story from \"./Story.js\";\nimport MadLibsGen from \"./MadLibsGen.js\";\n\nclass MadLibs extends Component {\n  state = {\n    madlibsgen: MadLibsGen,\n    selectedMadLibGen: MadLibsGen[0],\n    // selectedMadLibGen: MadLibsGen[0],\n  };\n\n  // state = {\n  //   selectedMadLibGen: null\n  // }\n\n  // Override current state (setState, newState?) spread operator line 17 = lines 9 - 10\n  onWordInputChange = (key, value, index) => {\n    // console.log(key);\n    // console.log(value);\n    // console.log(index);\n\n    // const newState is a copy of the oldState and spreading it across, newState has selected Madlibs (which story)\n    const newState = {\n      ...this.state,\n    };\n    newState.selectedMadLibGen.words[index] = {\n      ...newState.selectedMadLibGen.words[index],\n      value: value,\n    };\n    this.setState(newState);\n  };\n\n  // function that displays the story only if all values are present/inputted\n  isStoryComplete() {\n    for (let i = 0; i < this.state.selectedMadLibGen.words.length; i++) {\n      if (!this.state.selectedMadLibGen.words[i].value) {\n        return false;\n      }\n      return true;\n    }\n  }\n\n  // Create select dropdown to allow user to switch selected MadLib to play\n  // map through the array in this.state.madlibsgen - gather titles, display as dropdown <options>\n  // using onChange event, set the selectedMadLibGen object\n\n  createMadlibDropdown() {\n    let output = [];\n    for (let i = 0; i < this.state.madlibsgen.length; i++) {\n      output.push(<option value={i}>{this.state.madlibsgen[i].title}</option>);\n    }\n    return output;\n  }\n\n  changeMadlibSelection(event) {\n    console.log(event.target.value);\n    this.setState({\n      selectedMadLibgen: MadLibsGen[event.target.value],\n    });\n  }\n\n  // upon selection of Madlib (onChange), this.changeMadlibSelection is called\n  render() {\n    console.log(this.state.selectedMadLib);\n\n    return (\n      <div className=\"MadLibs\">\n        <h1>Mad Libs page</h1>\n        <h2>Select a Madlib</h2>\n\n        <select onChange={() => this.changeMadlibSelection(e)}>\n          {this.createMadlibDropdown()}\n        </select>\n\n        {!this.state.selectedMadLibGen ? this.createMadlibDropdown() : null}\n        {/* // if has someting selcted then don'm tdo anything otherwise create the drop down */}\n\n        <WordForm\n          words={this.state.selectedMadLibGen.words}\n          onInputChange={this.onWordInputChange}\n        />\n        {this.isStoryComplete() && (\n          <Story text={this.state.selectedMadLibGen.getText()} />\n        )}\n      </div>\n    );\n  }\n}\n\n// const MadLibs = () => {\n//   return (\n//     <main className=\"App-home\">\n//       <div>Mad Libs page</div>\n\n//       <WordForm />\n//     </main>\n//   );\n// };\n\nexport default MadLibs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}