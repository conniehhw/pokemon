{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/react/pokemon/src/components/WordForm.js\";\n// import { valueToObjectRepresentation } from \"@apollo/client/utilities\";\nimport React, { Component } from \"react\";\n\n// render text inputs for all word objects in the array (plural noun, adjectives etc)\n// calls on InputChange() when change event occurs and pass in appropriate arguments expected\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WordForm extends Component {\n  onInputChange(event, key, index) {\n    //   onInputChange(key, event, index) {\n    // console.log(event.target.value);\n    // console.log(key);\n    // console.log(index);\n    this.props.onInputChange(key, event.currentTarget.value, index);\n  }\n\n  // opens new empty array to be populated, grabs each word and push an input text,\n  createAllInputs() {\n    let output = [];\n    for (let i = 0; i < this.props.words.length; i++) {\n      let word = this.props.words[i];\n      output.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-0.5 px-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => this.onInputChange(event, word.key, i),\n          type: \"text\",\n          placeholder: word.label,\n          style: {\n            backgroundColor: \"#FFDE00\",\n            borderRadius: \"25px\"\n          },\n          className: \"bg-light border\"\n        }, word.key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this));\n    }\n    return output;\n  }\n  render() {\n    // function here\n    console.log(this.props.words);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Type in your words here in this form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), this.createAllInputs()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default WordForm;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","WordForm","onInputChange","event","key","index","props","currentTarget","value","createAllInputs","output","i","words","length","word","push","className","children","onChange","type","placeholder","label","style","backgroundColor","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","render","console","log"],"sources":["/Users/conniewong/bootcamp/react/pokemon/src/components/WordForm.js"],"sourcesContent":["// import { valueToObjectRepresentation } from \"@apollo/client/utilities\";\nimport React, { Component } from \"react\";\n\n// render text inputs for all word objects in the array (plural noun, adjectives etc)\n// calls on InputChange() when change event occurs and pass in appropriate arguments expected\nclass WordForm extends Component {\n  onInputChange(event, key, index) {\n    //   onInputChange(key, event, index) {\n    // console.log(event.target.value);\n    // console.log(key);\n    // console.log(index);\n    this.props.onInputChange(key, event.currentTarget.value, index);\n  }\n\n  // opens new empty array to be populated, grabs each word and push an input text,\n  createAllInputs() {\n    let output = [];\n\n    for (let i = 0; i < this.props.words.length; i++) {\n      let word = this.props.words[i];\n      output.push(\n        <div className=\"d-grid gap-0.5 px-4\">\n          <input\n            onChange={(event) => this.onInputChange(event, word.key, i)}\n            type=\"text\"\n            key={word.key}\n            placeholder={word.label}\n            style={{\n              backgroundColor: \"#FFDE00\",\n              borderRadius: \"25px\",\n            }}\n            className=\"bg-light border\"\n          ></input>\n\n          <br></br>\n        </div>\n      );\n    }\n\n    return output;\n  }\n\n  render() {\n    // function here\n    console.log(this.props.words);\n\n    return (\n      <div>\n        <br></br>\n        <h2>Type in your words here in this form</h2>\n        {this.createAllInputs()}\n      </div>\n    );\n  }\n}\n\nexport default WordForm;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,SAASH,SAAS,CAAC;EAC/BI,aAAaA,CAACC,KAAK,EAAEC,GAAG,EAAEC,KAAK,EAAE;IAC/B;IACA;IACA;IACA;IACA,IAAI,CAACC,KAAK,CAACJ,aAAa,CAACE,GAAG,EAAED,KAAK,CAACI,aAAa,CAACC,KAAK,EAAEH,KAAK,CAAC;EACjE;;EAEA;EACAI,eAAeA,CAAA,EAAG;IAChB,IAAIC,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACL,KAAK,CAACM,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAChD,IAAIG,IAAI,GAAG,IAAI,CAACR,KAAK,CAACM,KAAK,CAACD,CAAC,CAAC;MAC9BD,MAAM,CAACK,IAAI,eACTf,OAAA;QAAKgB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCjB,OAAA;UACEkB,QAAQ,EAAGf,KAAK,IAAK,IAAI,CAACD,aAAa,CAACC,KAAK,EAAEW,IAAI,CAACV,GAAG,EAAEO,CAAC,CAAE;UAC5DQ,IAAI,EAAC,MAAM;UAEXC,WAAW,EAAEN,IAAI,CAACO,KAAM;UACxBC,KAAK,EAAE;YACLC,eAAe,EAAE,SAAS;YAC1BC,YAAY,EAAE;UAChB,CAAE;UACFR,SAAS,EAAC;QAAiB,GANtBF,IAAI,CAACV,GAAG;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP,CAAC,eAET5B,OAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACP,CAAC;IACH;IAEA,OAAOlB,MAAM;EACf;EAEAmB,MAAMA,CAAA,EAAG;IACP;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACzB,KAAK,CAACM,KAAK,CAAC;IAE7B,oBACEZ,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5B,OAAA;QAAAiB,QAAA,EAAI;MAAoC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5C,IAAI,CAACnB,eAAe,CAAC,CAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAEV;AACF;AAEA,eAAe3B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}