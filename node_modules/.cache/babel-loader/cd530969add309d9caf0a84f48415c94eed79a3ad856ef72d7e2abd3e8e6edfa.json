{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/react/pokemon/src/components/WordForm.js\";\nimport { valueToObjectRepresentation } from \"@apollo/client/utilities\";\nimport React, { Component } from \"react\";\n\n// render text inputs for all word objects in the array (plural noun, adjectives etc)\n// calls on InputChange() when change event occurs and pass in appropriate arguments expected\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass WordForm extends Component {\n  onInputChange(key, index, event) {\n    this.props.onInputChange(key, event.currentTarget.value, index);\n  }\n  createAllInputs() {\n    let output = [];\n    for (let i = 0; i < this.props.words.length; i++) {\n      let word = this.props.words[i];\n      output.push( /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"{word.key}\",\n        placeholder: word.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this));\n    }\n    return output;\n  }\n  render() {\n    // function here\n    console.log(this.props.word[0]);\n    console.log(\"Hello\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"This is the word form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default WordForm;","map":{"version":3,"names":["valueToObjectRepresentation","React","Component","jsxDEV","_jsxDEV","WordForm","onInputChange","key","index","event","props","currentTarget","value","createAllInputs","output","i","words","length","word","push","type","id","placeholder","label","fileName","_jsxFileName","lineNumber","columnNumber","render","console","log","children"],"sources":["/Users/conniewong/bootcamp/react/pokemon/src/components/WordForm.js"],"sourcesContent":["import { valueToObjectRepresentation } from \"@apollo/client/utilities\";\nimport React, { Component } from \"react\";\n\n// render text inputs for all word objects in the array (plural noun, adjectives etc)\n// calls on InputChange() when change event occurs and pass in appropriate arguments expected\nclass WordForm extends Component {\n  onInputChange(key, index, event) {\n    this.props.onInputChange(key, event.currentTarget.value, index);\n  }\n\n  createAllInputs() {\n    let output = [];\n\n    for (let i = 0; i < this.props.words.length; i++) {\n      let word = this.props.words[i];\n      output.push(\n        <input type=\"text\" id=\"{word.key}\" placeholder={word.label} />\n      );\n    }\n\n    return output;\n  }\n\n  render() {\n    // function here\n    console.log(this.props.word[0]);\n    console.log(\"Hello\");\n\n    return (\n      <div>\n        <h1>This is the word form</h1>\n      </div>\n    );\n  }\n}\n\nexport default WordForm;\n"],"mappings":";AAAA,SAASA,2BAA2B,QAAQ,0BAA0B;AACtE,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,SAASH,SAAS,CAAC;EAC/BI,aAAaA,CAACC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAC/B,IAAI,CAACC,KAAK,CAACJ,aAAa,CAACC,GAAG,EAAEE,KAAK,CAACE,aAAa,CAACC,KAAK,EAAEJ,KAAK,CAAC;EACjE;EAEAK,eAAeA,CAAA,EAAG;IAChB,IAAIC,MAAM,GAAG,EAAE;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACL,KAAK,CAACM,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAChD,IAAIG,IAAI,GAAG,IAAI,CAACR,KAAK,CAACM,KAAK,CAACD,CAAC,CAAC;MAC9BD,MAAM,CAACK,IAAI,eACTf,OAAA;QAAOgB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,YAAY;QAACC,WAAW,EAAEJ,IAAI,CAACK;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC/D,CAAC;IACH;IAEA,OAAOb,MAAM;EACf;EAEAc,MAAMA,CAAA,EAAG;IACP;IACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACpB,KAAK,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/BW,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IAEpB,oBACE1B,OAAA;MAAA2B,QAAA,eACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAqB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAEV;AACF;AAEA,eAAetB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}