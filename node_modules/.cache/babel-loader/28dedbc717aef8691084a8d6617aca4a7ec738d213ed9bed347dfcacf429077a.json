{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/react/pokemon/src/components/MadLibs.jsx\";\n// import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport WordForm from \"./WordForm.js\";\nimport Story from \"./Story.js\";\nimport MadLibsGen from \"./MadLibsGen.js\";\nimport Container from \"react-bootstrap/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MadLibs extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      madlibsgen: MadLibsGen,\n      selectedMadLibGen: MadLibsGen[0]\n    };\n    // state = {\n    //   selectedMadLibGen: null,\n    // };\n    // Override current state (setState, newState?) spread operator line 17 = lines 9 - 10\n    this.onWordInputChange = (key, value, index) => {\n      console.log(key);\n      console.log(value);\n      console.log(index);\n\n      // const newState is a copy of the oldState and spreading it across, newState has selected Madlibs (which story)\n      const newState = {\n        ...this.state\n      };\n      newState.selectedMadLibGen.words[index] = {\n        ...newState.selectedMadLibGen.words[index],\n        value: value\n      };\n      this.setState(newState);\n    };\n  }\n  // function that displays the story only if all values are present/inputted\n  isStoryComplete() {\n    for (let i = 0; i < this.state.selectedMadLibGen.words.length; i++) {\n      if (!this.state.selectedMadLibGen.words[i].value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Create select dropdown to allow user to switch selected MadLib to play\n  // map through the array in this.state.madlibsgen - gather titles, display as dropdown <options>\n  // using onChange event, set the selectedMadLibGen object\n\n  createMadlibDropdown() {\n    let output = [];\n    for (let i = 0; i < this.state.madlibsgen.length; i++) {\n      output.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i,\n        children: this.state.madlibsgen[i].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this));\n    }\n    return output;\n  }\n  changeMadlibSelection(event) {\n    // console.log(event.target.value);\n    this.setState({\n      selectedMadLibGen: MadLibsGen[event.target.value]\n    });\n  }\n\n  // upon selection of Madlib (onChange), this.changeMadlibSelection is called\n  render() {\n    console.log(this.state.selectedMadLibGen);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MadLibs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Mad Libs page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select a Madlib\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a story and fill in the boxes and be ready for a silly time!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A Noun: A person, place or thing. Example: \\\"Pink panther\\\", \\\"School\\\", \\\"Lunch box\\\". A Verb: An action word. Example: \\\"Run\\\", \\\"Jump\\\", \\\"Dance\\\".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => this.changeMadlibSelection(e),\n          children: this.createMadlibDropdown()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WordForm, {\n          words: this.state.selectedMadLibGen.words,\n          onInputChange: this.onWordInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), this.isStoryComplete() && /*#__PURE__*/_jsxDEV(Story, {\n          text: this.state.selectedMadLibGen.getText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default MadLibs;","map":{"version":3,"names":["React","Component","WordForm","Story","MadLibsGen","Container","jsxDEV","_jsxDEV","MadLibs","constructor","arguments","state","madlibsgen","selectedMadLibGen","onWordInputChange","key","value","index","console","log","newState","words","setState","isStoryComplete","i","length","createMadlibDropdown","output","push","children","title","fileName","_jsxFileName","lineNumber","columnNumber","changeMadlibSelection","event","target","render","className","onChange","e","onInputChange","text","getText"],"sources":["/Users/conniewong/bootcamp/react/pokemon/src/components/MadLibs.jsx"],"sourcesContent":["// import { render } from \"@testing-library/react\";\nimport React, { Component } from \"react\";\nimport WordForm from \"./WordForm.js\";\nimport Story from \"./Story.js\";\nimport MadLibsGen from \"./MadLibsGen.js\";\nimport Container from \"react-bootstrap/Container\";\n\nclass MadLibs extends Component {\n  state = {\n    madlibsgen: MadLibsGen,\n    selectedMadLibGen: MadLibsGen[0],\n  };\n\n  // state = {\n  //   selectedMadLibGen: null,\n  // };\n\n  // Override current state (setState, newState?) spread operator line 17 = lines 9 - 10\n  onWordInputChange = (key, value, index) => {\n    console.log(key);\n    console.log(value);\n    console.log(index);\n\n    // const newState is a copy of the oldState and spreading it across, newState has selected Madlibs (which story)\n    const newState = {\n      ...this.state,\n    };\n    newState.selectedMadLibGen.words[index] = {\n      ...newState.selectedMadLibGen.words[index],\n      value: value,\n    };\n    this.setState(newState);\n  };\n\n  // function that displays the story only if all values are present/inputted\n  isStoryComplete() {\n    for (let i = 0; i < this.state.selectedMadLibGen.words.length; i++) {\n      if (!this.state.selectedMadLibGen.words[i].value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Create select dropdown to allow user to switch selected MadLib to play\n  // map through the array in this.state.madlibsgen - gather titles, display as dropdown <options>\n  // using onChange event, set the selectedMadLibGen object\n\n  createMadlibDropdown() {\n    let output = [];\n    for (let i = 0; i < this.state.madlibsgen.length; i++) {\n      output.push(<option value={i}>{this.state.madlibsgen[i].title}</option>);\n    }\n    return output;\n  }\n\n  changeMadlibSelection(event) {\n    // console.log(event.target.value);\n    this.setState({\n      selectedMadLibGen: MadLibsGen[event.target.value],\n    });\n  }\n\n  // upon selection of Madlib (onChange), this.changeMadlibSelection is called\n  render() {\n    console.log(this.state.selectedMadLibGen);\n\n    return (\n      <Container>\n        <div className=\"MadLibs\">\n          <h1>Mad Libs page</h1>\n          <h2>Select a Madlib</h2>\n          <p>\n            Choose a story and fill in the boxes and be ready for a silly time!\n          </p>\n          <p>\n            A Noun: A person, place or thing. Example: \"Pink panther\", \"School\",\n            \"Lunch box\". A Verb: An action word. Example: \"Run\", \"Jump\",\n            \"Dance\".\n          </p>\n\n          <select onChange={(e) => this.changeMadlibSelection(e)}>\n            {this.createMadlibDropdown()}\n            {/* {\" \"} */}\n          </select>\n\n          {/* {!this.state.selectedMadLibGen ? this.createMadlibDropdown() : null} */}\n          {/* // if has someting selcted then don'm tdo anything otherwise create the drop down */}\n\n          <WordForm\n            words={this.state.selectedMadLibGen.words}\n            onInputChange={this.onWordInputChange}\n          />\n          {this.isStoryComplete() && (\n            <Story text={this.state.selectedMadLibGen.getText()} />\n          )}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default MadLibs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}