{"ast":null,"code":"var _jsxFileName = \"/Users/conniewong/bootcamp/react/pokemon/src/components/OmdbContainer.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport MovieDetail from \"./MovieDetail\";\nimport API from \"../utils/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OmdbContainer = () => {\n  _s();\n  // Set state for the search result and the search query\n  const [result, setResult] = useState({}); //empty object\n  const [search, setSearch] = useState(\"\"); //empty string\n\n  // When the search form is submitted, use the API.search method to search for the movie(s)\n  const searchMovie = query => API.search(query).then(res => setResult(res.data)).catch(err => console.log(err));\n\n  // When the component loads, use the API.search method to render a default search result\n  // The empty optional array [] will cause the hook to only run one time after the component loads\n  // Refer to https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects\n  useEffect(() => {\n    searchMovie(\"The Matrix\");\n  }, []);\n\n  // Handler for input changes to the search form\n  const handleInputChange = e => setSearch(e.target.value);\n  // const handleInputChange = (e) => console.log(e.target.value);\n\n  // Handler for what happens when the search form is submitted\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    searchMovie(search);\n  };\n\n  // Destructure the result object to make the code more readable, assign them to empty strings to start\n  const {\n    Title = \"\",\n    Name = \"\",\n    Poster = \"\",\n    Director = \"\",\n    Genre = \"\",\n    Released = \"\"\n  } = result;\n  console.log(result);\n\n  /* Fall back to default header if `Title` is undefined\n  Does `Title` exist? If so, render the `MovieDetail` card \n  If not, render a different header */\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-8\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          heading: Title || \"Search for a Movie to Begin\",\n          children: [Title ? /*#__PURE__*/_jsxDEV(MovieDetail, {\n            name: Name,\n            title: Title,\n            src: Poster,\n            director: Director,\n            genre: Genre,\n            released: Released\n            // types={Types}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Results to Display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Name: \", result.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Type: \", result.types[0].type.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Ability: \", result.abilities[0].ability.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        size: \"md-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          heading: \"Search\",\n          children: /*#__PURE__*/_jsxDEV(SearchForm, {\n            value: search,\n            handleInputChange: handleInputChange,\n            handleFormSubmit: handleFormSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(OmdbContainer, \"OzmbLrXAVcDWi7IQLsgNVGdlwbs=\");\n_c = OmdbContainer;\nexport default OmdbContainer;\nvar _c;\n$RefreshReg$(_c, \"OmdbContainer\");","map":{"version":3,"names":["React","useState","useEffect","Container","Row","Col","Card","SearchForm","MovieDetail","API","jsxDEV","_jsxDEV","OmdbContainer","_s","result","setResult","search","setSearch","searchMovie","query","then","res","data","catch","err","console","log","handleInputChange","e","target","value","handleFormSubmit","preventDefault","Title","Name","Poster","Director","Genre","Released","children","size","heading","name","title","src","director","genre","released","fileName","_jsxFileName","lineNumber","columnNumber","types","type","abilities","ability","_c","$RefreshReg$"],"sources":["/Users/conniewong/bootcamp/react/pokemon/src/components/OmdbContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Col from \"./Col\";\nimport Card from \"./Card\";\nimport SearchForm from \"./SearchForm\";\nimport MovieDetail from \"./MovieDetail\";\nimport API from \"../utils/API\";\n\nconst OmdbContainer = () => {\n  // Set state for the search result and the search query\n  const [result, setResult] = useState({}); //empty object\n  const [search, setSearch] = useState(\"\"); //empty string\n\n  // When the search form is submitted, use the API.search method to search for the movie(s)\n  const searchMovie = (query) =>\n    API.search(query)\n      .then((res) => setResult(res.data))\n      .catch((err) => console.log(err));\n\n  // When the component loads, use the API.search method to render a default search result\n  // The empty optional array [] will cause the hook to only run one time after the component loads\n  // Refer to https://reactjs.org/docs/hooks-effect.html#tip-optimizing-performance-by-skipping-effects\n  useEffect(() => {\n    searchMovie(\"The Matrix\");\n  }, []);\n\n  // Handler for input changes to the search form\n  const handleInputChange = (e) => setSearch(e.target.value);\n  // const handleInputChange = (e) => console.log(e.target.value);\n\n  // Handler for what happens when the search form is submitted\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    searchMovie(search);\n  };\n\n  // Destructure the result object to make the code more readable, assign them to empty strings to start\n  const {\n    Title = \"\",\n    Name = \"\",\n    Poster = \"\",\n    Director = \"\",\n    Genre = \"\",\n    Released = \"\",\n  } = result;\n  console.log(result);\n\n  /* Fall back to default header if `Title` is undefined\n  Does `Title` exist? If so, render the `MovieDetail` card \n  If not, render a different header */\n\n  return (\n    <Container>\n      <Row>\n        <Col size=\"md-8\">\n          <Card heading={Title || \"Search for a Movie to Begin\"}>\n            {Title ? (\n              <MovieDetail\n                name={Name}\n                title={Title}\n                src={Poster}\n                director={Director}\n                genre={Genre}\n                released={Released}\n                // types={Types}\n              />\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n            <h3>Name: {result.name}</h3>\n            <h3>Type: {result.types[0].type.name}</h3>\n            <h3>Ability: {result.abilities[0].ability.name}</h3>\n            {/* <h3>Image: {result.moves[0].move.name}</h3> */}\n            {/* <img\n              alt={result}\n              className=\"img-fluid\"\n              src={result.images.original.url}\n            /> */}\n          </Card>\n        </Col>\n        <Col size=\"md-4\">\n          <Card heading=\"Search\">\n            <SearchForm\n              value={search}\n              handleInputChange={handleInputChange}\n              handleFormSubmit={handleFormSubmit}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default OmdbContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,GAAG,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMiB,WAAW,GAAIC,KAAK,IACxBV,GAAG,CAACO,MAAM,CAACG,KAAK,CAAC,CACdC,IAAI,CAAEC,GAAG,IAAKN,SAAS,CAACM,GAAG,CAACC,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;;EAErC;EACA;EACA;EACAtB,SAAS,CAAC,MAAM;IACdgB,WAAW,CAAC,YAAY,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,iBAAiB,GAAIC,CAAC,IAAKX,SAAS,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC1D;;EAEA;EACA,MAAMC,gBAAgB,GAAIH,CAAC,IAAK;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBd,WAAW,CAACF,MAAM,CAAC;EACrB,CAAC;;EAED;EACA,MAAM;IACJiB,KAAK,GAAG,EAAE;IACVC,IAAI,GAAG,EAAE;IACTC,MAAM,GAAG,EAAE;IACXC,QAAQ,GAAG,EAAE;IACbC,KAAK,GAAG,EAAE;IACVC,QAAQ,GAAG;EACb,CAAC,GAAGxB,MAAM;EACVW,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;;EAEnB;AACF;AACA;;EAEE,oBACEH,OAAA,CAACR,SAAS;IAAAoC,QAAA,eACR5B,OAAA,CAACP,GAAG;MAAAmC,QAAA,gBACF5B,OAAA,CAACN,GAAG;QAACmC,IAAI,EAAC,MAAM;QAAAD,QAAA,eACd5B,OAAA,CAACL,IAAI;UAACmC,OAAO,EAAER,KAAK,IAAI,6BAA8B;UAAAM,QAAA,GACnDN,KAAK,gBACJtB,OAAA,CAACH,WAAW;YACVkC,IAAI,EAAER,IAAK;YACXS,KAAK,EAAEV,KAAM;YACbW,GAAG,EAAET,MAAO;YACZU,QAAQ,EAAET,QAAS;YACnBU,KAAK,EAAET,KAAM;YACbU,QAAQ,EAAET;YACV;UAAA;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,gBAEFxC,OAAA;YAAA4B,QAAA,EAAI;UAAqB;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAC9B,eACDxC,OAAA;YAAA4B,QAAA,GAAI,QAAM,EAACzB,MAAM,CAAC4B,IAAI;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5BxC,OAAA;YAAA4B,QAAA,GAAI,QAAM,EAACzB,MAAM,CAACsC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACX,IAAI;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1CxC,OAAA;YAAA4B,QAAA,GAAI,WAAS,EAACzB,MAAM,CAACwC,SAAS,CAAC,CAAC,CAAC,CAACC,OAAO,CAACb,IAAI;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOhD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNxC,OAAA,CAACN,GAAG;QAACmC,IAAI,EAAC,MAAM;QAAAD,QAAA,eACd5B,OAAA,CAACL,IAAI;UAACmC,OAAO,EAAC,QAAQ;UAAAF,QAAA,eACpB5B,OAAA,CAACJ,UAAU;YACTuB,KAAK,EAAEd,MAAO;YACdW,iBAAiB,EAAEA,iBAAkB;YACrCI,gBAAgB,EAAEA;UAAiB;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACtC,EAAA,CApFID,aAAa;AAAA4C,EAAA,GAAb5C,aAAa;AAsFnB,eAAeA,aAAa;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}